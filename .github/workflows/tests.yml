name: Tests

on:
  push:
    branches: '*'
  pull_request:
    branches: [ master, main ]
jobs:
  test:
    concurrency:
      group: test
      cancel-in-progress: true
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'
      -
        name: Tests
        run: |
          go mod tidy
          go get github.com/axw/gocov/gocov
          go get github.com/AlekSi/gocov-xml
          go install github.com/axw/gocov/gocov
          go install github.com/AlekSi/gocov-xml
          go test -cover -v -failfast -p 1 $(go list ./...) -coverprofile cover.out
          gocov convert cover.out | gocov-xml > coverage.xml
        env:
          SN_SERVER: ${{ secrets.SN_SERVER }}
          SN_SKIP_SESSION_TESTS: true
          SN_EMAIL: ${{ secrets.ACTIONS_SN_EMAIL }}
          SN_PASSWORD: ${{ secrets.ACTIONS_SN_PASSWORD }}
      -
        name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          coverage-reports: coverage.xml

        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
